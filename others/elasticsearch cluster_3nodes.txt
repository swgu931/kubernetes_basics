-- memory 최소 2G 이상 필요
~]$ sudo sysctl -w vm.max_map_count=262144
~]$ sudo service docker restart

jeff@jeff-VirtualBox:~$ mkdir elk_cluster
jeff@jeff-VirtualBox:~$ cd elk_cluster/
jeff@jeff-VirtualBox:~/elk_cluster$ vi docker-compose.yml
version: '2.2'
services:
  elasticsearch:
    container_name: elk_m
    image: elasticsearch:6.5.3
    environment:
      - cluster.name=LDCC-cluster
      - node.name=master-node1
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es1:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - esnet
    stdin_open: true
    tty: true
  elasticsearch1:
    container_name: elk_d1
    image: elasticsearch:6.5.3
    environment:
      - cluster.name=LDCC-cluster
      - node.name=data-node1
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.zen.ping.unicast.hosts=elasticsearch"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es2:/usr/share/elasticsearch/data
    ports:
      - 9301:9300
    networks:
      - esnet
    stdin_open: true
    tty: true
    depends_on:
      - elasticsearch
  elasticsearch2:
    container_name: elk_d2
    image: elasticsearch:6.5.3
    environment:
      - cluster.name=LDCC-cluster
      - node.name=data-node2
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.zen.ping.unicast.hosts=elasticsearch1"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es3:/usr/share/elasticsearch/data
    ports:
      - 9302:9300
    networks:
      - esnet
    stdin_open: true
    tty: true
    depends_on:
      - elasticsearch
  kibana:
    container_name: kibana
    image: kibana:6.5.3
    ports:
      - 5601:5601
    networks:
      - esnet
    depends_on:
      - elasticsearch
      - elasticsearch1
      - elasticsearch2
volumes:
  es1:
    driver: local
  es2:
    driver: local
  es3:
    driver: local
networks:
  esnet:



-- 설치 (동일 dir.)
$ docker-compose up -d
$ docker-compose logs -f

-- 정지 및 삭제
$ docker-compose down
Stopping kibana         ... done
Stopping elasticsearch2 ... done
Stopping elasticsearch  ... done
Removing kibana         ... done
Removing elasticsearch2 ... done
Removing elasticsearch  ... done
Removing network elasticsearch_esnet








